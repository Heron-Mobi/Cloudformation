import os
import boto3

def get_user_id_and_session(authorization, accountid):
    ssm = boto3.client("ssm")
    identity_pool_param = ssm.get_parameter(
        Name="/heron/identity-pool-id", WithDecryption=False
    )
    user_pool_param = ssm.get_parameter(
        Name="/heron/user-pool-id", WithDecryption=False
    )
    config_bucket_param = ssm.get_parameter(
        Name="/heron/config-bucket-name", WithDecryption=False
    )
    region = os.environ["AWS_REGION"]
    logins = {
        "cognito-idp." + region + ".amazonaws.com/"
        + user_pool_param["Parameter"]["Value"]: authorization
    }
    client = boto3.client("cognito-identity")
    identityId = client.get_id(
        AccountId=accountid,
        IdentityPoolId=identity_pool_param["Parameter"]["Value"],
        Logins=logins,
    )
    creds = client.get_credentials_for_identity(
        IdentityId=identityId["IdentityId"], Logins=logins
    )
    session = boto3.Session(
        aws_access_key_id=creds["Credentials"]["AccessKeyId"],
        aws_secret_access_key=creds["Credentials"]["SecretKey"],
        aws_session_token=creds["Credentials"]["SessionToken"],
    )
    return identityId, session
