AWSTemplateFormatVersion: '2010-09-09'
Resources:
  SignalQueue: 
    Type: AWS::SQS::Queue
  SignalInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref LambdaSignal
      Action: 'lambda:InvokeFunction'
      Principal: 'sqs.amazonaws.com'
      SourceArn: !GetAtt SignalQueue.Arn
  SignalEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt SignalQueue.Arn
      FunctionName: !GetAtt LambdaSignal.Arn
      BatchSize: 1
  LambdaSignalRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
  LambdaSignalUserPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      Roles: 
        - '{{resolve:ssm:/heron/heron-user-rolename}}'
      PolicyName: 'lambdasignal-user-send'
      PolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: 'Allow'
            Action: 
              - 'sqs:SendMessage'
            Resource: !GetAtt SignalQueue.Arn
  LambdaSignalCorePolicy:
    Type: AWS::IAM::Policy
    Properties: 
      Roles: 
        - !Ref LambdaSignalRole
      PolicyName: 'lambdasignal-base'
      PolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: 'Allow'
            Action: 
              - 'sqs:ReceiveMessage'
              - 'sqs:DeleteMessage'
              - 'sqs:GetQueueAttributes'
              - 'sqs:ChangeMessageVisibility'
            Resource: !GetAtt SignalQueue.Arn
          - Effect: 'Allow'
            Action: 
              - 's3:GetObject'
            Resource: 
              - 'arn:aws:s3:::{{resolve:ssm:/heron/config-bucket-name}}/*/uuid'
              - 'arn:aws:s3:::{{resolve:ssm:/heron/config-bucket-name}}/*/config.json'
          - Effect: 'Allow'
            Action: 
              - 's3:ListBucket'
            Resource: 
              - 'arn:aws:s3:::{{resolve:ssm:/heron/config-bucket-name}}/*'
              - 'arn:aws:s3:::{{resolve:ssm:/heron/config-bucket-name}}/'
          - Effect: 'Allow'
            Action: 
              - 's3:DeleteObject'
            Resource: 
              - 'arn:aws:s3:::{{resolve:ssm:/heron/config-bucket-name}}/*/uuid'
          - Effect: 'Allow'
            Action: 
              - 'ssm:GetParameter'
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/heron/signal-lambda/*'
          - Effect: 'Allow'
            Action: 
              - 'ssm:GetParameter'
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/heron/config-bucket-name'
  LambdaSignal:
    Type: AWS::Lambda::Function
    DependsOn:
      - LambdaSignalRole
    Properties:
      Role: !GetAtt LambdaSignalRole.Arn
      Handler: index.lambda_handler
      Runtime: python3.10
      Timeout: 25
      MemorySize: 128
      Code:
        S3Bucket: '{{resolve:ssm:/heron/deploy-resource-bucket-name}}'
        S3Key: 
          !Join
            - '/'
            - - 'lambdas'
              - 'heron-signal'
              - '{{resolve:ssm:/heron/latest/lambda-build}}'
              - 'index.zip'

  LambdaRoleParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: '/heron/heron-signal-lambda-rolename'
      Type: String
      Value: !Ref LambdaSignalRole
Outputs:
  SignalQueueURL:
    Value: !Ref SignalQueue
